<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.shine.controller"/>


    <!--mvc拦截器配置-->
    <mvc:interceptors>

        <!-- 全局变量 -->
        <mvc:interceptor>
            <mvc:mapping path="/backend/**" />
            <bean class="com.shine.interceptor.GlobalInterceptor"></bean>
        </mvc:interceptor>

        <!--后台权限拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/backend/**" />
            <mvc:exclude-mapping path="/backend/register" />
            <mvc:exclude-mapping path="/backend/login" />
            <bean class="com.shine.controller.backend.BackendController" />
        </mvc:interceptor>

        <!--带有图形验证码的操作-->
<!--        <mvc:interceptor>
            <mvc:mapping path="/member/login/doLogin"/>
            <bean class="com.shine.interceptor.ImgVerifyCodeInterceptor"/>
        </mvc:interceptor>-->

        <!--防盗链 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/backend/register" />
            <mvc:exclude-mapping path="/backend/login" />
            <mvc:exclude-mapping path="/backend/role/tree" />
            <bean class="com.shine.interceptor.RefererInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->

    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
                <!-- JSON转换器 -->
            </list>
        </property>
    </bean>

    <!-- 全局异常配置 start -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
        <property name="warnLogCategory" value="WARN"/>
    </bean>
    <!-- 全局异常配置 end -->


    <!-- 配置jsp视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/views/"></property>
    </bean>


    <!-- 配置freeMarker视图解析器 -->
    <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!--开发环境下为false, 线上环境是true, 避免所有缓存-->
        <property name="cache" value="false"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <!-- 在ftl页面中获取request -->
        <property name="requestContextAttribute" value="request"/>
        <property name="order" value="0"/>
    </bean>


    <bean id="ftlTemplateService" class="com.shine.template.freemarkerService" />

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <!-- 设置freeMarker的配置文件路径 -->
    <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:freemarker.properties"/>
    </bean>

    <!-- 配置freeMarker的模板路径 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
                <entry key="ftlTemplateService" value-ref="ftlTemplateService"/>
            </map>
        </property>
        <property name="freemarkerSettings" ref="freemarkerConfiguration">
        </property>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <bean id="conversionService"
          class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.shine.bean.SpringMVCFileConverter"></bean>
            </list>
        </property>
    </bean>
    <mvc:annotation-driven conversion-service="conversionService" />


</beans>  